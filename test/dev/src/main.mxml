<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/halo" minWidth="1024" minHeight="768" xmlns:module="dev.module.*" preinitialize="onInit()" xmlns:zero="http://zero.seanhess.net/2009" xmlns:interfaces="dev.interfaces.*" xmlns:services="dev.services.*">

	
	<fx:Script>
		<![CDATA[
			import net.seanhess.zero.implement.ImplementAll;
			import dev.sandbox.Death;
			import dev.interfaces.Test;
			import net.seanhess.zero.interfaces.Service;
			import net.seanhess.zero.interfaces.Connector;
			import net.seanhess.zero.interfaces.Context;
			import dev.services.TestImplementation;
			import net.seanhess.zero.implement.ImplementService;
			
			private var context:Context;
			private var connector:Connector;
			
			private var testImplementation:TestImplementation;
			private var impl:ImplementAll;
			
			private var service:Service;
			
			private var test:Test;
			
			private function onInit():void
			{
				trace("INIT");
				
				context = new Context();
				connector = new Connector();
				connector.context = context;
				
				testImplementation = new TestImplementation();
				impl = new ImplementAll(new Test(), testImplementation);
				impl.context = context;
				
				// minus the context weirdness... now I can do it! 
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<!-- how would it know which interface you are using though? ... lame ! -->
		<!-- (Test)  (test)  ... how to know? 
			
		<zero:ImplementService service="{testinterface.test}" method="test.test"/>
		<zero:ImplementService service="{testinterface.test}" method="test.test"/>
		-->
	</fx:Declarations>
	
	<module:WootModule/>
	
</s:Application>